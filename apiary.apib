FORMAT: 1A

# DokoDoko
DokoDoko API is a *mobile application* where you share your location with your friends so that you join for a good time.




# Group Hello World

## Hello World [/hello/]
### Get Hello World [GET]
+ Response 200 (application/json)

        "Hello World"














# Group Users
Users related user of the **DokoDoko API**


## Users Collection [/users/]
### Create a User [PUT]
+ Request (application/json)

        { 
            "firstName": "Jean", 
            "lastName": "Dupont", 
            "city": "Paris", 
            "country": "France", 
            "birthDate": "1960-05-15", 
            "phone": "0600010203", 
            "email": "jean.dupont@truc.fr", 
            "password": "4Zerty" 
        }

+ Response 201 (application/json)

        {}
        
<!--+ Response 400 (application/json)-->
    
<!--        {-->
<!--            "error_code": 3, -->
<!--            "error": "Incorrect email" -->
<!--        }-->

+ Response 409 (application/json)
    
        [
            {
                "error_code": 1, 
                "error": "Email already exists" 
            },
            { 
                "error_code": 2,
                "error": "Phone already exists" 
            }
        ] 








### Retrieve Users with parameters : list of user's id, one email or one phone [POST]
+ Request (application/json)

        {
            "ids" : [1],
            "user" :
            {
                "id" : 1, 
                "sessionKey": "rtljzthmgekohbjfaqjcl9djmudmsepo" 
            }
        }
 
+ Request (application/json)

        {
            "email" : "jean.dupont@truc.fr",
            "user" :
            {
                "id" : 1, 
                "sessionKey": "rtljzthmgekohbjfaqjcl9djmudmsepo" 
            }
        }
        
+ Request (application/json)

        {
            "phone" : "0600010203",
            "user" :
            {
                "id" : 1, 
                "sessionKey": "rtljzthmgekohbjfaqjcl9djmudmsepo" 
            }
        }
        
        
+ Response 200 (application/json)

        {
            "id": 1,
            "lastName": "Dupont",
            "firstName": "Jean",
            "birthDate": -303955200000,
            "city": "Paris",
            "country": "France",
            "phone": "0600010203",
            "email": "jean.dupont@truc.fr",
            "registerDate": 1414242910342
        }

+ Response 400 (application/json)

        { 
            "error_code": 3, 
            "error": "None of the attributes used to determine the user."
        } 

+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }
 
 
 
 
 
 
 
 
 
 



## Login [/user/login/]
Log the user to the application and retrive is sessionKey.

### Login a User [POST]
+ Request (application/json)

        { 
            "phone": "0600010203", 
            "password": "4Zerty" 
        }

+ Request (application/json)

        { 
            "email": "jean.dupont@aol.fr",
            "password": "4Zerty" 
        }

+ Response 200 (application/json)

        {
            "id": 1,
            "lastName": "Dupont",
            "firstName": "Jean",
            "birthDate": -303955200000,
            "city": "Paris",
            "country": "France",
            "phone": "0600010203",
            "email": "jean.dupont@truc.fr",
            "registerDate": 1415222416267,
            "sessionKey": "kiy1e0ekd57fxsdrkgac5y9a67kmyii7"
        }
            
+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }
 

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
## VerifyKey [/user/verifyKey/]
Verify the key of the User. This is an info not an endpoint.

### Verify the Key of an User [POST]
+ Request (application/json)

        { 
            "id" : 1, 
            "sessionKey": "8vh4eceml7z3b2tbwiwvgj42i46rnc7r" 
        }
        
+ Response 200 (application/json)

        {
            "id": 1,
            "lastName": "Dupont",
            "firstName": "Jean",
            "birthDate": -303955200000,
            "city": "Paris",
            "country": "France",
            "phone": "0600010203",
            "email": "jean.dupont@truc.fr",
            "registerDate": 1415222416267
        }

+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
            
## Logout [/user/logout/]
Logout the user.

### Disconnect a User [POST]
+ Request (application/json)

        { 
            "id" : 1, 
            "sessionKey": "8vh4eceml7z3b2tbwiwvgj42i46rnc7r" 
        }
        
+ Response 200 (application/json)

        {}

+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }













## Forget Password [/user/forgetPassword/]
Not implemented

###ForgetPassword [POST]
+ Request (application/json)

+ Response 200 (application/json)

        {}
        
+ Response 400 (application/json)
















## Update Profile [/user/updateProfile/]
Update the profile of an User.

### Update Profile [POST]
+ Request (application/json)

        {
            "password" : "4Zerty",
            "user" : 
            { 
                "id": 1,
                "sessionKey": "8vh4eceml7z3b2tbwiwvgj42i46rnc7r",
                "city": "Tokyo", 
                "country": "Japon",
            }
        }

+ Response 200 (application/json)

        {}

+ Response 400 (application/json)

        { 
            "error_code": 3, 
            "error": "The current password is wrong." 
        }

+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }












































# Group Dokos
Dokos related doko of the **DokoDoko API**
 

 



## Doko Collection [/dokos/]
### Create a Doko [PUT]
+ Request (application/json)

        {
            "sessionKey" : "0qaj0z84vdxjgfsewnn6o0ox4otyzzzi",
            "doko" : {
                "userId": 1,
                "latitude": 48.856614,
                "longitude": 2.3522219,
                "text": "Avec des potes.",
                "picture": "byte[]"
            }
        }
        
+ Response 201 (application/json)

        {}

+ Response 400 (application/json)

        { 
            "error_code": 3, 
            "error": "Invalid argument." 
        }
         
+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }
 
 









### List Doko By scope & Group [POST]
+ Request (application/json)

        {
            "sessionKey" : "0qaj0z84vdxjgfsewnn6o0ox4otyzzzi",
            "distance" : 1500,
            "doko" : {
                "userId": 1,
                "latitude": 48.856614,
                "longitude": 2.3522219
            }
        }
        
+ Response 200 (application/json)

        [
            {
                "id": 1,
                "latitude": 48.856614,
                "longitude": 2.3522219,
                "userId": 1,
                "date": 1414258311572,
                "text": "Avec des potes.",
                "picture": null
            },
            {
                "id": 2,
                "latitude": 48.8169855,
                "longitude": 2.3585835,
                "userId": 2,
                "date": 1415227811878,
                "text": null,
                "picture": null
            }            
        ]
 
+ Response 400 (application/json)

        { 
            "error_code": 3, 
            "error": "Invalid argument." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }
 
 




































# Group Groups
Groups related groups of the **DokoDoko API**


## Groups Collection  [/groups/]
### List all groups for a user [POST]
+ Request (application/json)

        { 
            "id" : 1, 
            "sessionKey": "anjobsj7dnd58aeo1wd35coguteoamrj" 
        }

+ Response 200 (application/json)

        [
            {
                "id": 1
                "groupName": "amis",
                "friendId":
                [
                    10,
                    12
                ]
            },
            {
                "id": 2
                "groupName": "fac",
                "friendId":
                [
                   5,
                   24
                ]
            }
        ]
        
+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }









    
### Create a group [PUT]
+ Request (application/json)

        {
            "group": 
            {
                "userId": 1,
                "groupName":"upmc"
            },
            "sessionKey": "afcgggv54czgvegre" 
        }
    
+ Response 201 (application/json) 

        {}
          
+ Response 409 (application/json)
    
        {
            "error_code": 4, 
            "error": "This group already exists." 
        }

+ Response 400 (application/json)

        { 
            "error_code": 3, 
            "error": "Invalid argument."
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }









### Delete a group [DELETE]
+ Request (application/json)

        {
            "group": 
            {
                "id": 1,
                "userId": 1
            },
            "sessionKey": "afcgggv54czgvegre" 
        }
        
+ Response 200 (application/json)
        
        {}

+ Response 400 (application/json)

        { 
            "error_code": 3, 
            "error": "Invalid argument."
        }

+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }
        
+   Response 404 (application/json)

        {
            "error_code": 4,
            "error": "This group does not exist."
        }






















## Friends Collection [/groups/friend/]
### Add friend in group [PUT]
+ Request (application/json)
        
        {
            "group": 
            {
                "id": 1,
                "userId": 1
            },
            "sessionKey": "afcgggv54czgvegre",
            "friendId": 2
        }

+   Response 201 (application/json)

        {}

+ Response 400 (application/json)

        { 
            "error_code": 3, 
            "error": "Invalid argument."
        }
        
+   Response 404 (application/json)

        {
            "error_code": 4,
            "error": "This group does not exist."
        }         
         
+   Response 404 (application/json)

        { 
            "error_code": 5, 
            "error": "This user does not exist." 
        }
         
+   Response 409 (application/json)

        { 
            "error_code": 6, 
            "error": "This friend request already exists. 
        }
         
+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }         
   









   
### delete friend [DELETE]

+   Request (application/json)
        
        {
            "group": 
            {
                "id": 1,
                "userId": 1
            },
            "sessionKey": "afcgggv54czgvegre",
            "friendId": 2
        }

+   Response 200 (application/json)

        {}
         
+ Response 400 (application/json)

        { 
            "error_code": 3, 
            "error": "Invalid argument."
        }
        
+   Response 404 (application/json)

        {
            "error_code": 4,
            "error": "This group does not exist."
        }         
         
+   Response 404 (application/json)

        { 
            "error_code": 5, 
            "error": "This user does not exist." 
        }       

+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }   




















   
   


## get users's FriendRequest  [/friendRequest/get/]
### Get friendRequest [POST]
+   Request (application/json)
        
        { 
            "id" : 1, 
            "sessionKey": "8vh4eceml7z3b2tbwiwvgj42i46rnc7r" 
        }

+   Response 200 (application/json)

        {}
 
+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }    
 
 


























 
## Accept/Decline FriendRequest  [/friendRequest/]
### Accept or decline friend request [POST]
+   Request (application/json)
        
        {
            "friendRequest" :
                {
                    "id" :2,
                    "userId" : 2,
                    "groupId" : 2
                },
            "sessionKey" : "9202922d678c1705661b",
            "statut": true
        }

+   Response 200 (application/json)

        {}
         
+ Response 400 (application/json)

        { 
            "error_code": 3, 
            "error": "Invalid argument."
        }
         
+   Response 404 (application/json)

        {
            "error_code": 4,
            "error": "This group does not exist."
        }    
        
+   Response 404 (application/json)

        {
            "error_code": 5,
            "error": "This friend request does not exist."
        }   
 
+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }    





















# Group Message
Messages of the **DokoDoko API**
 

 



## Message Collection [/messages/]
### Create a message [PUT]
+ Request (application/json)

        {
            "sessionKey" : "0qaj0z84vdxjgfsewnn6o0ox4otyzzzi",
            "message" : {
                "userId": 1,
                "recipientId": 2,
                "text": "Avec des potes."
            }
        }
        
+ Response 201 (application/json)

        {}

+ Response 400 (application/json)

        { 
            "error_code": 3, 
            "error": "Invalid argument." 
        }
        
+   Response 404 (application/json)

        {
            "error_code": 4,
            "error": "Recipient does not exist."
        }  
         
+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }
 
 









### List message [POST]
+ Request (application/json)

        { 
            "id" : 1, 
            "sessionKey": "8vh4eceml7z3b2tbwiwvgj42i46rnc7r" 
        }
        
+ Response 200 (application/json)

        [
            {
                "userId": 1,
                "recipientId": 2,
                "text": "Salut."
            },
            {
                "userId": 1,
                "recipientId": 2,
                "text": "Avec des potes."
            }         
        ]
 
+ Response 400 (application/json)

        { 
            "error_code": 3, 
            "error": "Invalid argument." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 1, 
            "error": "User with this sessionKey not found." 
        }
        
+ Response 401 (application/json)

        { 
            "error_code": 2,
            "error": "The session has expired." 
        }
 
 



















# Group Administrator
Administrator privilege about **DokoDoko API**

## Users List All [/admin/users/]
### List all user [POST]
+ Request (application/json)

        { 
            "id" : 1, 
            "sessionKey": "anjobsj7dnd58aeo1wd35coguteoamrj" 
        }
        
+ Response 200 (application/json)

        [
            {   
                "id": 1,
                "lastName": "Dupont",
                "firstName": "Jean",
                "birthDate": -303955200000,
                "city": "Paris",
                "country": "France",
                "phone": "0600010203",
                "email": "jean.dupont@aol.fr",
                "registerDate": 1414242910342
            }, 
            {   
                "id": 2,
                "lastName": "Durand",
                "firstName": "Marcel",
                "birthDate": -309448600000,
                "city": "Versaille",
                "country": "France"
                }
        ]

+ Response 401 (application/json)

        [
            { 
                "error_code": 1, 
                "error": "User with this sessionKey not found." 
            },
            { 
                "error_code": 2,
                "error": "The session has expired." 
            }
        ]
















        

## Dokos List All [/admin/dokos/]
### List all doko [POST]
+ Request (application/json)

        { 
            "id" : 1, 
            "sessionKey": "anjobsj7dnd58aeo1wd35coguteoamrj" 
        }
        
+ Response 200 (application/json)

        [
            {
                "id": 1,
                "latitude": 48.856614,
                "longitude": 2.3522219,
                "userId": 1,
                "date": 1414258311572,
                "text": "Avec des potes.",
                "picture": null
            },
            {
                "id": 2,
                "latitude": 12.8169855,
                "longitude": -15.3585835,
                "userId": 2,
                "date": 1415227811878,
                "text": null,
                "picture": null
            }            
        ]
 
+ Response 401 (application/json)

        [
            { 
                "error_code": 1, 
                "error": "User with this sessionKey not found." 
            },
            { 
                "error_code": 2,
                "error": "The session has expired." 
            }
        ]
         














         
## Groups List All [/admin/groups/]
### List all groups [POST]
+ Request (application/json)

        { 
            "id" : 1, 
            "sessionKey": "anjobsj7dnd58aeo1wd35coguteoamrj" 
        }
        
+ Response 200 (application/json)

        [
            {   
                "id": 1,
                "groupName": "superGroup",
                "userId": 1,
                "friendId": [ ]
            }, 
            {   
                "id": 2,
                "groupName": "awesomeGroup",
                "userId": 2,
                "friendId": [ ]
            }
        ]

+ Response 401 (application/json)

        [
            { 
                "error_code": 1, 
                "error": "User with this sessionKey not found." 
            },
            { 
                "error_code": 2,
                "error": "The session has expired." 
            }
        ]

















        
## Friend requests List All [/admin/friendRequests/]
### List all friend requests [POST]
+ Request (application/json)

        { 
            "id" : 1, 
            "sessionKey": "anjobsj7dnd58aeo1wd35coguteoamrj" 
        }
        
+ Response 200 (application/json)

        [
            {   
                "userId": 1,
                "friendId": 2,
                "groupName": "superGroup"
            }
        ]

+ Response 401 (application/json)

        [
            { 
                "error_code": 1, 
                "error": "User with this sessionKey not found." 
            },
            { 
                "error_code": 2,
                "error": "The session has expired." 
            }
        ]